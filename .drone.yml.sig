eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgcnVuLXRlc3RzLXN1aXRlOgogICAgaW1hZ2U6IG1pY2hhbHBvZGVzendhL2RvY2tlci1jb21wb3NlOmxhdGVzdAogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gLi9iaW4vZHJvbmUtcnVuLXRlc3RzLnNoIGFwaS10ZXN0cwogICAgICAtIC4vYmluL2Ryb25lLXJ1bi10ZXN0cy5zaCB3ZWItdGVzdHMKICAgIHdoZW46CiAgICAgIHJlcG86IG1kaGFyYW1hZGFzMS9kcm9uZS1zdGFydGVyCiAgICAgIGV2ZW50OiBbIHB1c2gsIHB1bGxfcmVxdWVzdCBdCgogICMgcHVibGlzaC1hcGktZG9ja2VyOgogICMgICBpbWFnZTogcGx1Z2lucy9kb2NrZXI6MS4xMgogICMgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUk5BTUV9CiAgIyAgIHBhc3N3b3JkOiAke0RPQ0tFUl9QQVNTV09SRH0KICAjICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICMgICB2b2x1bWVzOgogICMgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAjICAgcmVwbzogYW5vcnNpY2gvZHMtYXBpCiAgIyAgIHRhZ3M6CiAgIyAgICAgLSAiJHtEUk9ORV9CUkFOQ0h9XyR7RFJPTkVfQ09NTUlUfSIKICAjICAgZG9ja2VyZmlsZTogLi9hcGkvRG9ja2VyZmlsZQogICMgICBjb250ZXh0OiAuL2FwaS8KICAjICAgd2hlbjoKICAjICAgICBicmFuY2g6IFsibWFzdGVyIiwgInByb2R1Y3Rpb24iXQoKICAjIHB1Ymxpc2gtd2ViLWRvY2tlcjoKICAjICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyOjEuMTIKICAjICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICMgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU1dPUkR9CiAgIyAgIGVtYWlsOiAke0RPQ0tFUl9FTUFJTH0KICAjICAgdm9sdW1lczoKICAjICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgIyAgIHJlcG86IGFub3JzaWNoL2RzLXdlYgogICMgICB0YWdzOgogICMgICAgIC0gIiR7RFJPTkVfQlJBTkNIfV8ke0RST05FX0NPTU1JVH0iCiAgIyAgIGRvY2tlcmZpbGU6IC4vd2ViL0RvY2tlcmZpbGUKICAjICAgY29udGV4dDogLi93ZWIvCiAgIyAgIHdoZW46CiAgIyAgICAgYnJhbmNoOiBbIm1hc3RlciIsICJwcm9kdWN0aW9uIl0KCiAgIyBwdWJsaXNoLWxhbmRpbmctZG9ja2VyOgogICMgICBpbWFnZTogcGx1Z2lucy9kb2NrZXI6MS4xMgogICMgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUk5BTUV9CiAgIyAgIHBhc3N3b3JkOiAke0RPQ0tFUl9QQVNTV09SRH0KICAjICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICMgICB2b2x1bWVzOgogICMgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAjICAgcmVwbzogYW5vcnNpY2gvZHMtbGFuZGluZwogICMgICB0YWdzOgogICMgICAgIC0gIiR7RFJPTkVfQlJBTkNIfV8ke0RST05FX0NPTU1JVH0iCiAgIyAgIGRvY2tlcmZpbGU6IC4vbGFuZGluZy9Eb2NrZXJmaWxlCiAgIyAgIGNvbnRleHQ6IC4vbGFuZGluZy8KICAjICAgd2hlbjoKICAjICAgICBicmFuY2g6IFsibWFzdGVyIiwgInByb2R1Y3Rpb24iXQoKICAjIGRlcGxveS1zdGFnaW5nOgogICMgICBpbWFnZTogd2lsbGlhbXllaC9hbnNpYmxlOnVidW50dTE2LjA0CiAgIyAgIGNvbW1hbmRzOgogICMgICAgIC0gbWtkaXIgLXAgfi8uc3NoLwogICMgICAgIC0gZWNobyAke1NTSF9LRVl9ID4gfi8uc3NoL2lkX3JzYV9hcHAgJiYgY2htb2QgNjAwIH4vLnNzaC9pZF9yc2FfYXBwCiAgIyAgICAgLSBjZCAuL2RlcGxveS9iaW4gJiYgLi9kZXBsb3ktc3RhZ2luZy1hcHAuc2ggLS1wcml2YXRlLWtleSB-Ly5zc2gvaWRfcnNhX2FwcCAtLWV4dHJhLXZhcnMgImRvY2tlcl90YWc9JHtEUk9ORV9CUkFOQ0h9XyR7RFJPTkVfQ09NTUlUfSBkb2NrZXJfcmVnaXN0cnlfdXNlcm5hbWU9JERPQ0tFUl9VU0VSTkFNRSBkb2NrZXJfcmVnaXN0cnlfcGFzc3dvcmQ9JERPQ0tFUl9QQVNTV09SRCBkb2NrZXJfcmVnaXN0cnlfZW1haWw9JERPQ0tFUl9FTUFJTCIKICAjICAgd2hlbjoKICAjICAgICBicmFuY2g6IFsibWFzdGVyIl0KICAjICAgICBldmVudDogW3B1c2hdCgogICMgc2xhY2stbm90aWZpY2F0aW9uOgogICMgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICMgICAjIHRoYXQgd2lsbCBzZW5kIGEgcGVyc29uYWwgbm90aWZpY2F0aW9uIHRvIG91ciBkcm9uZS1zdGFydGVyIHNsYWNrIGNoYW5uZWwKICAjICAgIyByZWFkIGhlcmUgaG93IHRvIHNldHVwIHNsYWNrIHdlYmhvb2tzIGZvciB5b3VyIGFjY291bnQ6IGh0dHBzOi8vYXBpLnNsYWNrLmNvbS9pbmNvbWluZy13ZWJob29rcwogICMgICB3ZWJob29rOiBodHRwczovL2hvb2tzLnNsYWNrLmNvbS9zZXJ2aWNlcy9UMzNLUk5KUkUvQjRCQlFVTUZBL3JlendLalowbExidWNSOTRHZjV2WkIzegogICMgICB1c2VybmFtZTogZHJvbmUtc3RhcnRlcgogICMgICBpY29uX2Vtb2ppOiAiOnJvY2tldDoiCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnLCBkZXBsb3ltZW50LCBwdWxsX3JlcXVlc3QgXQogICMgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0K.Db_sQr6fnoetETOdrCcSN24z3qamKaqVqcOTsciSl0s